CREATE VIEW VIEW_FIN_CHEQUE_EMITIDO(
    ID_CONTA_CAIXA,
    NOME_CONTA_CAIXA,
    TALAO,
	NUMERO_TALAO,
	ID_CHEQUE,
    NUMERO_CHEQUE,
    STATUS_CHEQUE,
    DATA_STATUS,
	VALOR)
AS
select
  CC.ID AS ID_CONTA_CAIXA, CC.NOME AS NOME_CONTA_CAIXA, 
  T.TALAO, T.NUMERO AS NUMERO_TALAO, 
  C.ID AS ID_CHEQUE, C.NUMERO AS NUMERO_CHEQUE, C.STATUS_CHEQUE, C.DATA_STATUS, VALOR
 
from 
  TB_CHEQUE C 
	inner join TB_TALONARIO_CHEQUE T on (C.ID_TALONARIO_CHEQUE = T.ID)
    inner join TB_CONTA_CAIXA CC on (T.ID_CONTA_CAIXA = CC.ID)
	inner join TB_FIN_CHEQUE_EMITIDO CE on (CE.ID_CHEQUE = C.ID);
	
	
	CREATE
VIEW VIEW_TRIBUTACAO_PIS
AS
(
select 
	CONFIGURA.ID, CONFIGURA.ID_TRIBUT_GRUPO_TRIBUTARIO, CONFIGURA.ID_TRIBUT_OPERACAO_FISCAL,  
	PIS.CST_PIS, PIS.EFD_TABELA_435, PIS.MODALIDADE_BASE_CALCULO, PIS.PORCENTO_BASE_CALCULO, PIS.ALIQUOTA_PORCENTO, PIS.ALIQUOTA_UNIDADE,
	PIS.VALOR_PRECO_MAXIMO, PIS.VALOR_PAUTA_FISCAL
from
	TB_TRIBUT_CONFIGURA_OF_GT CONFIGURA
	INNER JOIN TB_TRIBUT_PIS_COD_APURACAO PIS ON (PIS.ID_TRIBUT_CONFIGURA_OF_GT = CONFIGURA.ID)
);

CREATE
VIEW VIEW_TRIBUTACAO_ISS
AS
(
select 
	OPERACAO.ID, OPERACAO.DESCRICAO, OPERACAO.DESCRICAO_NA_NF, OPERACAO.CFOP,
	ISS.MODALIDADE_BASE_CALCULO, ISS.PORCENTO_BASE_CALCULO, ISS.ALIQUOTA_PORCENTO, ISS.ALIQUOTA_UNIDADE, ISS.VALOR_PRECO_MAXIMO,
	ISS.VALOR_PAUTA_FISCAL, ISS.ITEM_LISTA_SERVICO, ISS.CODIGO_TRIBUTACAO
from
	TB_TRIBUT_OPERACAO_FISCAL OPERACAO
	INNER JOIN TB_TRIBUT_ISS ISS ON (ISS.ID_TRIBUT_OPERACAO_FISCAL = OPERACAO.ID)
);

CREATE
VIEW VIEW_TRIBUTACAO_IPI
AS
(
select 
	CONFIGURA.ID, CONFIGURA.ID_TRIBUT_GRUPO_TRIBUTARIO, CONFIGURA.ID_TRIBUT_OPERACAO_FISCAL,  
	IPI.CST_IPI, IPI.MODALIDADE_BASE_CALCULO, IPI.PORCENTO_BASE_CALCULO, IPI.ALIQUOTA_PORCENTO, IPI.ALIQUOTA_UNIDADE, IPI.VALOR_PRECO_MAXIMO,
	IPI.VALOR_PAUTA_FISCAL
from
	TB_TRIBUT_CONFIGURA_OF_GT CONFIGURA
	INNER JOIN TB_TRIBUT_IPI_DIPI IPI ON (IPI.ID_TRIBUT_CONFIGURA_OF_GT = CONFIGURA.ID)
);


CREATE
VIEW VIEW_TRIBUTACAO_ICMS_CUSTOM
AS
(
select 
	CAB.ID, CAB.DESCRICAO, CAB.ORIGEM_MERCADORIA,  
	DET.UF_DESTINO, DET.CFOP, DET.CSOSN_B, DET.CST_B, DET.MODALIDADE_BC, DET.ALIQUOTA, DET.VALOR_PAUTA, DET.VALOR_PRECO_MAXIMO, 
	DET.MVA, DET.PORCENTO_BC, DET.MODALIDADE_BC_ST, DET.ALIQUOTA_INTERNA_ST, DET.ALIQUOTA_INTERESTADUAL_ST, DET.PORCENTO_BC_ST,
	DET.ALIQUOTA_ICMS_ST, DET.VALOR_PAUTA_ST, DET.VALOR_PRECO_MAXIMO_ST
from
	TB_TRIBUT_ICMS_CUSTOM_CAB CAB
	INNER JOIN TB_TRIBUT_ICMS_CUSTOM_DET DET ON (DET.ID_TRIBUT_ICMS_CUSTOM_CAB = CAB.ID)
);


CREATE
VIEW VIEW_TRIBUTACAO_ICMS
AS
(
select 
	CONFIGURA.ID, CONFIGURA.ID_TRIBUT_GRUPO_TRIBUTARIO, CONFIGURA.ID_TRIBUT_OPERACAO_FISCAL,  
	GRUPO.ORIGEM_MERCADORIA,
	ICMS.UF_DESTINO, ICMS.CFOP, ICMS.CSOSN_B, ICMS.CST_B, ICMS.MODALIDADE_BC, ICMS.ALIQUOTA, ICMS.VALOR_PAUTA, ICMS.VALOR_PRECO_MAXIMO, 
	ICMS.MVA, ICMS.PORCENTO_BC, ICMS.MODALIDADE_BC_ST, ICMS.ALIQUOTA_INTERNA_ST, ICMS.ALIQUOTA_INTERESTADUAL_ST, ICMS.PORCENTO_BC_ST,
	ICMS.ALIQUOTA_ICMS_ST, ICMS.VALOR_PAUTA_ST, ICMS.VALOR_PRECO_MAXIMO_ST
from
	TB_TRIBUT_CONFIGURA_OF_GT CONFIGURA
	INNER JOIN TB_TRIBUT_ICMS_UF ICMS ON (ICMS.ID_TRIBUT_CONFIGURA_OF_GT = CONFIGURA.ID)
	INNER JOIN TB_TRIBUT_GRUPO_TRIBUTARIO GRUPO ON (CONFIGURA.ID_TRIBUT_GRUPO_TRIBUTARIO = GRUPO.ID)
);



CREATE
VIEW VIEW_TRIBUTACAO_COFINS
AS
(
select 
	CONFIGURA.ID, CONFIGURA.ID_TRIBUT_GRUPO_TRIBUTARIO, CONFIGURA.ID_TRIBUT_OPERACAO_FISCAL,  
	COFINS.CST_COFINS, COFINS.EFD_TABELA_435, COFINS.MODALIDADE_BASE_CALCULO, COFINS.PORCENTO_BASE_CALCULO, COFINS.ALIQUOTA_PORCENTO, COFINS.ALIQUOTA_UNIDADE,
	COFINS.VALOR_PRECO_MAXIMO, COFINS.VALOR_PAUTA_FISCAL
from
	TB_TRIBUT_CONFIGURA_OF_GT CONFIGURA
	INNER JOIN TB_TRIBUT_COFINS_COD_APURACAO COFINS ON (COFINS.ID_TRIBUT_CONFIGURA_OF_GT = CONFIGURA.ID)
);

CREATE VIEW VIEW_FIN_TOTAL_RECEBIMENTOS_DIA(
	ID_CONTA_CAIXA,
    DATA_RECEBIMENTO,
    TOTAL)
AS
select
  PR.ID_CONTA_CAIXA, PR.DATA_RECEBIMENTO, SUM(PR.VALOR_RECEBIDO) AS TOTAL
from
  TB_FIN_PARCELA_RECEBIMENTO PR
group by ID_CONTA_CAIXA, DATA_RECEBIMENTO;


/* EXERCICIO: A VIEW NÃO LEVA EM CONTA A EMPRESA. CORRIJA ISSO. */	

CREATE VIEW VIEW_FIN_TOTAL_PAGAMENTOS_DIA(
	ID_CONTA_CAIXA,
    DATA_PAGAMENTO,
    TOTAL)
AS
select
  PP.ID_CONTA_CAIXA, PP.DATA_PAGAMENTO, SUM(PP.VALOR_PAGO) AS TOTAL
from
  TB_FIN_PARCELA_PAGAMENTO PP
group by ID_CONTA_CAIXA, DATA_PAGAMENTO;


/* EXERCICIO: A VIEW NÃO LEVA EM CONTA A EMPRESA. CORRIJA ISSO. */


CREATE
VIEW VIEW_SPED_NFE_EMITENTE
AS

select 
	DISTINCT(NFE.ID_FORNECEDOR) AS ID,
	E.NOME,
	E.CPF_CNPJ,
	E.INSCRICAO_ESTADUAL,
	E.CODIGO_MUNICIPIO,
	E.SUFRAMA,
	E.LOGRADOURO,
	E.NUMERO,
	E.COMPLEMENTO,
	E.BAIRRO
from
	TB_NFE_CABECALHO NFE 
	INNER JOIN TB_NFE_EMITENTE E ON (E.ID_NFE_CABECALHO = NFE.ID)
where 
	NFE.ID_FORNECEDOR IS NOT NULL;
	
	
	
	CREATE
VIEW VIEW_SPED_NFE_DETALHE
AS

select 
	NFED.*,
	NFEC.ID_TRIBUT_OPERACAO_FISCAL,
	P.FK_ID_UNIDADE,
	COFINS.CST_COFINS,
	COFINS.QUANTIDADE_VENDIDA AS QUANTIDADE_VENDIDA_COFINS,
	COFINS.BASE_CALCULO_COFINS,
	COFINS.ALIQUOTA_COFINS_PERCENTUAL,
	COFINS.ALIQUOTA_COFINS_REAIS,
	COFINS.VALOR_COFINS,
	ICMS.ORIGEM_MERCADORIA,
	ICMS.CST_ICMS,
	ICMS.CSOSN,
	ICMS.MODALIDADE_BC_ICMS,
	ICMS.TAXA_REDUCAO_BC_ICMS,
	ICMS.BASE_CALCULO_ICMS,
	ICMS.ALIQUOTA_ICMS,
	ICMS.VALOR_ICMS,
	ICMS.MOTIVO_DESONERACAO_ICMS,
	ICMS.MODALIDADE_BC_ICMS_ST,
	ICMS.PERCENTUAL_MVA_ICMS_ST,
	ICMS.PERCENTUAL_REDUCAO_BC_ICMS_ST,
	ICMS.VALOR_BASE_CALCULO_ICMS_ST,
	ICMS.ALIQUOTA_ICMS_ST,
	ICMS.VALOR_ICMS_ST,
	ICMS.VALOR_BC_ICMS_ST_RETIDO,
	ICMS.VALOR_ICMS_ST_RETIDO,
	ICMS.VALOR_BC_ICMS_ST_DESTINO,
	ICMS.VALOR_ICMS_ST_DESTINO,
	ICMS.ALIQUOTA_CREDITO_ICMS_SN,
	ICMS.VALOR_CREDITO_ICMS_SN,
	ICMS.PERCENTUAL_BC_OPERACAO_PROPRIA,
	ICMS.UF_ST,
	II.VALOR_BC_II,
	II.VALOR_DESPESAS_ADUANEIRAS,
	II.VALOR_IMPOSTO_IMPORTACAO,
	II.VALOR_IOF,
	IPI.ENQUADRAMENTO_IPI,
	IPI.CNPJ_PRODUTOR,
	IPI.CODIGO_SELO_IPI,
	IPI.QUANTIDADE_SELO_IPI,
	IPI.ENQUADRAMENTO_LEGAL_IPI,
	IPI.CST_IPI,
	IPI.VALOR_BASE_CALCULO_IPI,
	IPI.ALIQUOTA_IPI,
	IPI.QUANTIDADE_UNIDADE_TRIBUTAVEL,
	IPI.VALOR_UNIDADE_TRIBUTAVEL,
	IPI.VALOR_IPI,
	ISSQN.BASE_CALCULO_ISSQN,
	ISSQN.ALIQUOTA_ISSQN,
	ISSQN.VALOR_ISSQN,
	ISSQN.MUNICIPIO_ISSQN,
	ISSQN.ITEM_LISTA_SERVICOS,
	PIS.CST_PIS,
	PIS.QUANTIDADE_VENDIDA AS QUANTIDADE_VENDIDA_PIS,
	PIS.VALOR_BASE_CALCULO_PIS,
	PIS.ALIQUOTA_PIS_PERCENTUAL,
	PIS.ALIQUOTA_PIS_REAIS,
	PIS.VALOR_PIS 	
from
	TB_NFE_DETALHE NFED 
	LEFT JOIN TB_NFE_DETALHE_IMPOSTO_COFINS COFINS ON (COFINS.ID_NFE_DETALHE = NFED.ID)
	LEFT JOIN TB_NFE_DETALHE_IMPOSTO_ICMS ICMS ON (ICMS.ID_NFE_DETALHE = NFED.ID)
	LEFT JOIN TB_NFE_DETALHE_IMPOSTO_II II ON (II.ID_NFE_DETALHE = NFED.ID)
	LEFT JOIN TB_NFE_DETALHE_IMPOSTO_IPI IPI ON (IPI.ID_NFE_DETALHE = NFED.ID)
	LEFT JOIN TB_NFE_DETALHE_IMPOSTO_ISSQN ISSQN ON (ISSQN.ID_NFE_DETALHE = NFED.ID)
	LEFT JOIN TB_NFE_DETALHE_IMPOSTO_PIS PIS ON (PIS.ID_NFE_DETALHE = NFED.ID)
	LEFT JOIN TB_PRODUTO_UNIDADE P ON (NFED.ID_PRODUTO = P.FK_ID_PRODUTO)
	LEFT JOIN TB_NFE_CABECALHO NFEC ON (NFED.ID_NFE_CABECALHO = NFEC.ID)

	WHERE P.UNIDADE_ENTRADA =TRUE;
	
	
	CREATE
VIEW VIEW_SPED_NFE_DESTINATARIO
AS

select 
	DISTINCT(NFE.ID_CLIENTE) AS ID,
	E.NOME,
	E.CPF_CNPJ,
	E.INSCRICAO_ESTADUAL,
	E.CODIGO_MUNICIPIO,
	E.SUFRAMA,
	E.LOGRADOURO,
	E.NUMERO,
	E.COMPLEMENTO,
	E.BAIRRO
from
	TB_NFE_CABECALHO NFE 
	INNER JOIN TB_NFE_DESTINATARIO E ON (E.ID_NFE_CABECALHO = NFE.ID)
where 
	NFE.ID_CLIENTE IS NOT NULL;

	
		CREATE
	VIEW VIEW_SPED_C490
	AS
	(
	select 
		VD.CST, 
		VD.CFOP, 
		VD.TAXA_ICMS, 
		VC.DATA_VENDA,
		SUM(VD.VALOR_TOTAL) AS SOMA_ITEM, 
		SUM(VD.BASE_ICMS) AS SOMA_BASE_ICMS, 
		SUM(VD.ICMS) AS SOMA_ICMS 
	from 
		TB_ECF_VENDA_DETALHE VD, TB_ECF_VENDA_CABECALHO VC 
	where 
		VD.ID_ECF_VENDA_CABECALHO = VC.ID
		AND VD.CANCELADO = 'N'
	group by 
		CST, VD.CFOP, TAXA_ICMS, DATA_VENDA
	);
	
		CREATE
	VIEW VIEW_SPED_C425
	AS
	(
	select 
		VD.ID_ECF_PRODUTO, 
		UND.DESCRICAO AS DESCRICAO_UNIDADE, 
		VD.TOTALIZADOR_PARCIAL,
		VC.DATA_VENDA,
		SUM(VD.QUANTIDADE) AS SOMA_QUANTIDADE, 
		SUM(VD.VALOR_TOTAL) AS SOMA_ITEM, 
		SUM(VD.PIS) AS SOMA_PIS, 
		SUM(VD.COFINS) AS SOMA_COFINS 
	from 
		TB_ECF_VENDA_DETALHE VD, TB_ECF_VENDA_CABECALHO VC, TB_PRODUTO P, TB_PRODUTO_UNIDADE U , TB_UNIDADE UND
	where 
		VD.ID_ECF_VENDA_CABECALHO = VC.ID and 
		VD.ID_ECF_PRODUTO = P.ID and 
		P.ID = U.FK_ID_PRODUTO AND
		UND.ID=U.FK_ID_UNIDADE
		AND U.UNIDADE_ENTRADA=TRUE
	group by 
		ID_ECF_PRODUTO, UND.DESCRICAO,  TOTALIZADOR_PARCIAL,DATA_VENDA
	);
	
		CREATE
	VIEW VIEW_SPED_C390
	AS
	(
	select
		NF2D.CST, 
		NF2D.CFOP, 
		NF2D.TAXA_ICMS, 
		NF2C.DATA_EMISSAO,
		SUM(NF2D.VALOR_TOTAL) AS SOMA_ITEM, 
		SUM(NF2D.BASE_ICMS) AS SOMA_BASE_ICMS, 
		SUM(NF2D.ICMS) AS SOMA_ICMS, 
		SUM(NF2D.ICMS_OUTRAS) AS SOMA_ICMS_OUTRAS 
	from 
		TB_ECF_NOTA_FISCAL_DETALHE NF2D, TB_ECF_NOTA_FISCAL_CABECALHO NF2C 
	where 
		NF2D.ID_NF_CABECALHO = NF2C.ID
	group by 
		NF2D.CST, NF2D.CFOP,NF2C.DATA_EMISSAO, TAXA_ICMS
	);
	
		CREATE
	VIEW VIEW_SPED_C370
	AS
	(
	select 
		nd.ID_NF_CABECALHO AS ID_NF_CABECALHO,
		nc.DATA_EMISSAO AS DATA_EMISSAO,
		nd.ID_PRODUTO AS ID_PRODUTO,
		nd.ITEM AS ITEM,
		--p.ID_UNIDADE_PRODUTO AS ID_UNIDADE_PRODUTO,
		nd.QUANTIDADE AS QUANTIDADE,
		nd.VALOR_TOTAL AS VALOR_TOTAL,
		nd.CST AS CST,
		nd.DESCONTO AS DESCONTO
	from 
		tb_ecf_nota_fiscal_detalhe nd , tb_ecf_nota_fiscal_cabecalho nc,  tb_produto p, tb_produto_unidade u , tb_unidade und
	where 	
		((nd.ID_NF_CABECALHO = nc.ID) AND (nd.ID_PRODUTO = p.ID))
	);
	
		CREATE
	VIEW VIEW_SPED_C321
	AS
	(
	select 
		NF2D.ID_PRODUTO, 
		UND.DESCRICAO AS DESCRICAO_UNIDADE, 
		NF2C.DATA_EMISSAO,
		SUM(NF2D.QUANTIDADE) AS SOMA_QUANTIDADE, 
		SUM(NF2D.VALOR_TOTAL) AS SOMA_ITEM, 
		SUM(NF2D.DESCONTO) AS SOMA_DESCONTO, 
		SUM(NF2D.BASE_ICMS) AS SOMA_BASE_ICMS, 
		SUM(NF2D.ICMS) AS SOMA_ICMS, 
		SUM(NF2D.PIS) AS SOMA_PIS, 
		SUM(NF2D.COFINS) AS SOMA_COFINS 
	from 
		TB_ECF_NOTA_FISCAL_DETALHE NF2D, TB_ECF_NOTA_FISCAL_CABECALHO NF2C, TB_PRODUTO P, TB_PRODUTO_UNIDADE U,TB_UNIDADE UND 
	where 
		NF2D.ID_NF_CABECALHO = NF2C.ID and 
		NF2D.ID_PRODUTO = P.ID and 
		P.ID = U.FK_ID_PRODUTO AND
		U.FK_ID_UNIDADE=UND.ID
	group by 
		ID_PRODUTO,UND.DESCRICAO,NF2C.DATA_EMISSAO
	);
	
	CREATE
VIEW VIEW_SPED_C300
AS

select 
	SERIE, 
	SUBSERIE, 
	DATA_EMISSAO, 
	SUM(TOTAL_NF) AS SOMA_TOTAL_NF, 
	SUM(PIS) AS SOMA_PIS,
	SUM(COFINS) AS SOMA_COFINS 
from 
	TB_ECF_NOTA_FISCAL_CABECALHO
group by 
	SERIE, SUBSERIE, DATA_EMISSAO;
	
	CREATE
VIEW VIEW_SPED_C190
AS

select 
	NFEC.ID, 
	NFED.CST_ICMS, 
	NFED.CFOP, 
	NFED.ALIQUOTA_ICMS, 
	NFEC.DATA_HORA_EMISSAO,
	SUM(NFED.VALOR_TOTAL) AS SOMA_VALOR_OPERACAO, 
	SUM(NFED.BASE_CALCULO_ICMS) AS SOMA_BASE_CALCULO_ICMS, 
	SUM(NFED.VALOR_ICMS) AS SOMA_VALOR_ICMS,
	SUM(NFED.VALOR_BASE_CALCULO_ICMS_ST) AS SOMA_BASE_CALCULO_ICMS_ST, 
	SUM(NFED.VALOR_ICMS_ST) AS SOMA_VALOR_ICMS_ST,
	SUM(NFED.VALOR_OUTRAS_DESPESAS) AS SOMA_VL_RED_BC,
	SUM(NFED.VALOR_IPI) AS SOMA_VALOR_IPI
from 
	VIEW_SPED_NFE_DETALHE NFED
	INNER JOIN TB_NFE_CABECALHO NFEC ON (NFED.ID_NFE_CABECALHO = NFEC.ID)
group by 
	NFEC.ID, CST_ICMS, CFOP, ALIQUOTA_ICMS, DATA_HORA_EMISSAO;
	
	
	
		CREATE
	VIEW VIEW_SINTEGRA_61R
	AS
	(
	select
		
		NF2C.DATA_EMISSAO AS DATA_EMISSAO, 
		EXTRACT(month FROM NF2C.DATA_EMISSAO) MES_EMISSAO, 
		EXTRACT(year FROM NF2C.DATA_EMISSAO) AS ANO_EMISSAO, 
		NF2D.ECF_ICMS_ST, 
		SUM(NF2D.QUANTIDADE) AS SOMA_QUANTIDADE, 
		SUM(NF2D.VALOR_TOTAL) AS SOMA_ITEM, 
		SUM(NF2D.BASE_ICMS) AS SOMA_BASE_ICMS 
	from 
		TB_ECF_NOTA_FISCAL_CABECALHO NF2C, TB_ECF_NOTA_FISCAL_DETALHE NF2D, TB_PRODUTO P
	where 
		NF2D.ID_PRODUTO=P.ID and 
		NF2D.ID_NF_CABECALHO = NF2C.ID
	group by 
		MES_EMISSAO, ANO_EMISSAO, NF2C.DATA_EMISSAO,NF2D.ECF_ICMS_ST
	);
	
	
	
		CREATE
	VIEW VIEW_SINTEGRA_60R
	AS
	(
	SELECT 
		--VD.GTIN, 
		I.SERIE,
		VC.DATA_VENDA AS DATA_EMISSAO, 
		extract (MONTH from VC.DATA_VENDA) AS MES_EMISSAO, 
		extract (YEAR from VC.DATA_VENDA) AS ANO_EMISSAO, 
		M.ID, 
		VD.ECF_ICMS_ST, 
		SUM(VD.QUANTIDADE) AS SOMA_QUANTIDADE, 
		SUM(VD.VALOR_TOTAL) AS SOMA_ITEM, 
		SUM(VD.BASE_ICMS) AS SOMA_BASE_ICMS, 
		SUM(VD.ICMS) AS SOMA_ICMS 
	FROM 
		TB_ECF_VENDA_CABECALHO VC, TB_ECF_VENDA_DETALHE VD, TB_ECF_IMPRESSORA I, TB_ECF_MOVIMENTO M
	WHERE 
		VC.ID_ECF_MOVIMENTO = M.ID AND 
		M.ID_ECF_IMPRESSORA = I.ID AND 
		VD.ID_ECF_VENDA_CABECALHO = VC.ID
	GROUP BY 
		MES_EMISSAO, ANO_EMISSAO, I.SERIE,VC.DATA_VENDA,M.ID,VD.ECF_ICMS_ST--VD.GTIN
	);
	
	
		CREATE
	VIEW VIEW_SINTEGRA_60D
	AS
	(
	select 
		--VD.GTIN, 
		I.SERIE,
		VC.DATA_VENDA AS DATA_EMISSAO, 
		M.ID, 
		VD.ECF_ICMS_ST, 
		SUM(VD.QUANTIDADE) AS SOMA_QUANTIDADE, 
		SUM(VD.VALOR_TOTAL) AS SOMA_ITEM, 
		SUM(VD.BASE_ICMS) AS SOMA_BASE_ICMS, 
		SUM(VD.ICMS) AS SOMA_ICMS 
	from 
		TB_ECF_VENDA_CABECALHO VC, TB_ECF_VENDA_DETALHE VD, TB_ECF_IMPRESSORA I, TB_ECF_MOVIMENTO M
	where 
		VC.ID_ECF_MOVIMENTO = M.ID and 
		M.ID_ECF_IMPRESSORA = I.ID and 
		VD.ID_ECF_VENDA_CABECALHO = VC.ID
                AND VD.CANCELADO = 'N'  
	group by 
		--VD.GTIN,
		 I.SERIE, VC.DATA_VENDA, M.ID, VD.ECF_ICMS_ST
	);
	
	
	CREATE
VIEW VIEW_SESSAO_EMPRESA
(
ID_EMPRESA,ID_PESSOA,RAZAO_SOCIAL
)
AS
(
select 
   EP.FK_ID_EMPRESA, EP.ID_PESSOA, E.RAZAO_SOCIAL
from
   tb_empresa_pessoa ep
   inner join tb_empresa e on (ep.fk_id_empresa = e.id)
);




	
	
	
	
	CREATE VIEW VIEW_FIN_RESUMO_TESOURARIA(
    ID_CONTA_CAIXA,
    NOME_CONTA_CAIXA,
    NOME_PESSOA,
	DATA_LANCAMENTO,
    DATA_PAGO_RECEBIDO,
    HISTORICO,
    VALOR,
    DESCRICAO_DOCUMENTO_ORIGEM,
    OPERACAO)
AS
select
  CC.ID AS ID_CONTA_CAIXA, CC.NOME AS NOME_CONTA_CAIXA, P.NOME,
  LP.DATA_LANCAMENTO, PP.DATA_PAGAMENTO AS DATA_PAGO_RECEBIDO, 
  PP.HISTORICO, PP.VALOR_PAGO, DOC.DESCRICAO, 'Sim' AS OPERACAO
 
from 
  TB_FIN_PARCELA_PAGAMENTO PP 
	inner join TB_CONTA_CAIXA CC on (PP.ID_CONTA_CAIXA = CC.ID)
        inner join TB_FIN_PARCELA_PAGAR PPR on (PP.ID_FIN_PARCELA_PAGAR = PPR.ID)
	inner join TB_FIN_LANCAMENTO_PAGAR LP on (PPR.ID_FIN_LANCAMENTO_PAGAR = LP.ID)
	inner join TB_FORNECEDOR F on (LP.ID_FORNECEDOR = F.ID) 
	inner join TB_PESSOA P on (F.ID_PESSOA = P.ID)
	inner join TB_FIN_DOCUMENTO_ORIGEM DOC on (LP.ID_FIN_DOCUMENTO_ORIGEM = DOC.ID)
 
 
union
 
select
  CC.ID AS ID_CONTA_CAIXA, CC.NOME AS NOME_CONTA_CAIXA, P.NOME,
  LR.DATA_LANCAMENTO, PR.DATA_RECEBIMENTO AS DATA_PAGO_RECEBIDO, 
  PR.HISTORICO, PR.VALOR_RECEBIDO, DOC.DESCRICAO, 'E' AS OPERACAO
 
from 
  TB_FIN_PARCELA_RECEBIMENTO PR
	inner join TB_CONTA_CAIXA CC on (PR.ID_CONTA_CAIXA = CC.ID)
        inner join TB_FIN_PARCELA_RECEBER PPR on (PR.ID_FIN_PARCELA_RECEBER = PPR.ID)
	inner join TB_FIN_LANCAMENTO_RECEBER LR on (PPR.ID_FIN_LANCAMENTO_RECEBER = LR.ID)
	inner join TB_CLIENTE C on (LR.ID_CLIENTE = C.ID) 
	inner join TB_PESSOA P on (C.ID_PESSOA = P.ID)
	inner join TB_FIN_DOCUMENTO_ORIGEM DOC on (LR.ID_FIN_DOCUMENTO_ORIGEM = DOC.ID)
 
ORDER BY 1, 4
;


CREATE
VIEW VIEW_PESSOA_TRANSPORTADORA
AS

select 
	T.ID,
	T.ID_PESSOA,
	T.DATA_CADASTRO,
	T.OBSERVACAO,
	E.LOGRADOURO, E.NUMERO, E.COMPLEMENTO, E.BAIRRO, E.CIDADE, E.CEP, E.MUNICIPIO_IBGE, E.UF, E.FONE, 
	P.NOME, P.TIPO, P.EMAIL, P.SITE, PF.CPF AS "CPF_CNPJ"
from
	TB_PESSOA P 
	INNER JOIN TB_PESSOA_FISICA PF ON (PF.FK_ID_PESSOA = P.ID)
	INNER JOIN TB_TRANSPORTADORA T ON (T.ID_PESSOA = P.ID)
	INNER JOIN TB_PESSOA_ENDERECO E ON (E.ID_PESSOA = P.ID)
where 
	P.TRANSPORTADORA = 'Sim' and E.PRINCIPAL = 'Sim'

union

select 
	T.ID,
	T.ID_PESSOA,
	T.DATA_CADASTRO,
	T.OBSERVACAO,
	E.LOGRADOURO, E.NUMERO, E.COMPLEMENTO, E.BAIRRO, E.CIDADE, E.CEP, E.MUNICIPIO_IBGE, E.UF, E.FONE, 
	P.NOME, P.TIPO, P.EMAIL, P.SITE, PJ.CNPJ AS "CPF_CNPJ"
from
	TB_PESSOA P 
	INNER JOIN TB_PESSOA_JURIDICA PJ ON (PJ.FK_ID_PESSOA = P.ID)
	INNER JOIN TB_TRANSPORTADORA T ON (T.ID_PESSOA = P.ID)
	INNER JOIN TB_PESSOA_ENDERECO E ON (E.ID_PESSOA = P.ID)
where 
	P.TRANSPORTADORA = 'Sim' and E.PRINCIPAL = 'Sim';
	
	
	CREATE
VIEW VIEW_PESSOA_FORNECEDOR
AS

select 
	F.ID,
	F.ID_PESSOA,
	F.ID_ATIVIDADE_FOR_CLI,
	F.ID_SITUACAO_FOR_CLI,
	F.DESDE,
	F.OPTANTE_SIMPLES_NACIONAL,
	F.LOCALIZACAO,
	F.DATA_CADASTRO,
	F.SOFRE_RETENCAO,
	F.CHEQUE_NOMINAL_A,
	F.OBSERVACAO,
	F.CONTA_REMETENTE,
	F.PRAZO_MEDIO_ENTREGA,
	F.GERA_FATURAMENTO,
	F.NUM_DIAS_PRIMEIRO_VENCIMENTO,
	F.NUM_DIAS_INTERVALO,
	F.QUANTIDADE_PARCELAS,
	E.LOGRADOURO, E.NUMERO, E.COMPLEMENTO, E.BAIRRO, E.CIDADE, E.CEP, E.MUNICIPIO_IBGE, E.UF, E.FONE, 
	P.NOME, P.TIPO, P.EMAIL, P.SITE, PF.CPF AS "CPF_CNPJ"
from
	TB_PESSOA P 
	INNER JOIN TB_PESSOA_FISICA PF ON (PF.FK_ID_PESSOA = P.ID)
	INNER JOIN TB_FORNECEDOR F ON (F.ID_PESSOA = P.ID)
	INNER JOIN TB_PESSOA_ENDERECO E ON (E.ID_PESSOA = P.ID)
where 
	P.FORNECEDOR = 'Sim' and E.PRINCIPAL = 'Sim'

union

select 
	F.ID,
	F.ID_PESSOA,
	F.ID_ATIVIDADE_FOR_CLI,
	F.ID_SITUACAO_FOR_CLI,
	F.DESDE,
	F.OPTANTE_SIMPLES_NACIONAL,
	F.LOCALIZACAO,
	F.DATA_CADASTRO,
	F.SOFRE_RETENCAO,
	F.CHEQUE_NOMINAL_A,
	F.OBSERVACAO,
	F.CONTA_REMETENTE,
	F.PRAZO_MEDIO_ENTREGA,
	F.GERA_FATURAMENTO,
	F.NUM_DIAS_PRIMEIRO_VENCIMENTO,
	F.NUM_DIAS_INTERVALO,
	F.QUANTIDADE_PARCELAS,
	E.LOGRADOURO, E.NUMERO, E.COMPLEMENTO, E.BAIRRO, E.CIDADE, E.CEP, E.MUNICIPIO_IBGE, E.UF, E.FONE, 
	P.NOME, P.TIPO, P.EMAIL, P.SITE, PJ.CNPJ AS "CPF_CNPJ"
from
	TB_PESSOA P 
	INNER JOIN TB_PESSOA_JURIDICA PJ ON (PJ.FK_ID_PESSOA = P.ID)
	INNER JOIN TB_FORNECEDOR F ON (F.ID_PESSOA = P.ID)
	INNER JOIN TB_PESSOA_ENDERECO E ON (E.ID_PESSOA = P.ID)
where 
	P.FORNECEDOR = 'Sim' and E.PRINCIPAL = 'Sim';
	
	
	CREATE
VIEW VIEW_PESSOA_COLABORADOR
AS

select 
	C.ID,
	C.ID_SINDICATO,
	C.ID_TIPO_ADMISSAO,
	C.ID_SITUACAO_COLABORADOR,
	C.ID_PESSOA,
	C.ID_TIPO_COLABORADOR,
	C.ID_NIVEL_FORMACAO,
	C.ID_CARGO,
	C.ID_SETOR,
	C.MATRICULA,
	C.DATA_CADASTRO,
	C.DATA_ADMISSAO,
	E.LOGRADOURO, E.NUMERO, E.COMPLEMENTO, E.BAIRRO, E.CIDADE, E.CEP, E.MUNICIPIO_IBGE, E.UF, E.FONE, 
	P.NOME, P.TIPO, P.EMAIL, P.SITE, PF.CPF AS "CPF_CNPJ", PF.RG AS "RG_IE"
from
	TB_PESSOA P 
	INNER JOIN TB_PESSOA_FISICA PF ON (PF.FK_ID_PESSOA = P.ID)
	INNER JOIN TB_COLABORADOR C ON (C.ID_PESSOA = P.ID)
	INNER JOIN TB_PESSOA_ENDERECO E ON (E.ID_PESSOA = P.ID)
where 
	P.COLABORADOR = 'Sim' and E.PRINCIPAL = 'Sim'

union

select 
	C.ID,
	C.ID_SINDICATO,
	C.ID_TIPO_ADMISSAO,
	C.ID_SITUACAO_COLABORADOR,
	C.ID_PESSOA,
	C.ID_TIPO_COLABORADOR,
	C.ID_NIVEL_FORMACAO,
	C.ID_CARGO,
	C.ID_SETOR,
	C.MATRICULA,
	C.DATA_CADASTRO,
	C.DATA_ADMISSAO,
	E.LOGRADOURO, E.NUMERO, E.COMPLEMENTO, E.BAIRRO, E.CIDADE, E.CEP, E.MUNICIPIO_IBGE, E.UF, E.FONE, 
	P.NOME, P.TIPO, P.EMAIL, P.SITE, PJ.CNPJ AS "CPF_CNPJ", PJ.INSCRICAO_ESTADUAL AS "RG_IE"
from
	TB_PESSOA P 
	  JOIN TB_PESSOA_JURIDICA PJ ON (PJ.FK_ID_PESSOA = P.ID)
	  JOIN TB_COLABORADOR C ON (C.ID_PESSOA = P.ID)
	  JOIN TB_PESSOA_ENDERECO E ON (E.ID_PESSOA = P.ID)
where 
	P.COLABORADOR = 'Sim' and E.PRINCIPAL = 'Sim';
	
	
	 -- View: view_pessoa_cliente

-- DROP VIEW view_pessoa_cliente;

CREATE OR REPLACE VIEW view_pessoa_cliente AS 
 SELECT c.id,
    c.id_operacao_fiscal,
    c.id_pessoa,
    c.id_atividade_for_cli,
    c.id_situacao_for_cli,
  
    c.desde,
    c.data_cadastro,
    c.observacao,
    c.conta_tomador,
    c.gera_financeiro,
    c.indicador_preco,
    c.porcento_desconto,
    c.forma_desconto,
    c.limite_credito,
    c.tipo_frete,    
    e.logradouro,
    e.numero,
    e.complemento,
    e.bairro,
    e.cidade,
    e.cep,
    e.municipio_ibge,
    e.uf,
    e.fone,
    p.nome,
    p.tipo,
    p.email,
    p.site,
    pf.cpf AS cpf_cnpj,
    pf.rg AS rg_ie
   FROM tb_pessoa p
      inner JOIN tb_pessoa_fisica pf ON pf.fk_id_pessoa = p.id
     inner JOIN tb_cliente c ON c.id_pessoa = p.id     
     inner JOIN tb_pessoa_endereco e ON e.id_pessoa = p.id
  WHERE p.cliente = 'Sim'::bpchar AND e.principal = 'Sim'::bpchar
UNION
 SELECT c.id,
    c.id_operacao_fiscal,
    c.id_pessoa,
    c.id_atividade_for_cli,
    c.id_situacao_for_cli,
  
    c.desde,
    c.data_cadastro,
    c.observacao,
    c.conta_tomador,
    c.gera_financeiro,
    c.indicador_preco,
    c.porcento_desconto,
    c.forma_desconto,
    c.limite_credito,
    c.tipo_frete,
    e.logradouro,
    e.numero,
    e.complemento,
    e.bairro,
    e.cidade,
    e.cep,
    e.municipio_ibge,
    e.uf,
    e.fone,
    p.nome,
    p.tipo,
    p.email,
    p.site,
    pj.cnpj AS cpf_cnpj,
    pj.inscricao_estadual AS rg_ie
   FROM tb_pessoa p
   inner  JOIN tb_pessoa_juridica pj ON pj.fk_id_pessoa = p.id
    inner JOIN tb_cliente c ON c.id_pessoa = p.id     
   inner  JOIN tb_pessoa_endereco e ON e.id_pessoa = p.id
  WHERE p.cliente = 'Sim'::bpchar AND e.principal = 'Sim'::bpchar;



 

CREATE VIEW VIEW_FIN_MOVIMENTO_CAIXA_BANCO(
    ID,
    ID_CONTA_CAIXA,
    NOME_CONTA_CAIXA,
    NOME_PESSOA,
	DATA_LANCAMENTO,
    DATA_PAGO_RECEBIDO,
    HISTORICO,
    VALOR,
    DESCRICAO_DOCUMENTO_ORIGEM,
    OPERACAO)
AS
select
  CAST( CONCAT(CC.ID,LP.ID,PP.ID) as Integer) as ID,
  CC.ID AS ID_CONTA_CAIXA, CC.NOME AS NOME_CONTA_CAIXA, P.NOME,
  LP.DATA_LANCAMENTO, PP.DATA_PAGAMENTO AS DATA_PAGO_RECEBIDO, 
  PP.HISTORICO, PP.VALOR_PAGO, DOC.DESCRICAO, 'Sim' AS OPERACAO
 
from 
  TB_FIN_PARCELA_PAGAMENTO PP 
	inner join TB_CONTA_CAIXA CC on (PP.ID_CONTA_CAIXA = CC.ID)
        inner join TB_FIN_PARCELA_PAGAR PPR on (PP.ID_FIN_PARCELA_PAGAR = PPR.ID)
	inner join TB_FIN_LANCAMENTO_PAGAR LP on (PPR.ID_FIN_LANCAMENTO_PAGAR = LP.ID)
	inner join TB_FORNECEDOR F on (LP.ID_FORNECEDOR = F.ID) 
	inner join TB_PESSOA P on (F.ID_PESSOA = P.ID)
	inner join TB_FIN_DOCUMENTO_ORIGEM DOC on (LP.ID_FIN_DOCUMENTO_ORIGEM = DOC.ID)
 
 
union
 
select
  CAST( CONCAT(CC.ID,LR.ID,PR.ID) as Integer) as ID,
  CC.ID AS ID_CONTA_CAIXA, CC.NOME AS NOME_CONTA_CAIXA, P.NOME,
  LR.DATA_LANCAMENTO, PR.DATA_RECEBIMENTO AS DATA_PAGO_RECEBIDO, 
  PR.HISTORICO, PR.VALOR_RECEBIDO, DOC.DESCRICAO, 'E' AS OPERACAO
 
from 
  TB_FIN_PARCELA_RECEBIMENTO PR
	inner join TB_CONTA_CAIXA CC on (PR.ID_CONTA_CAIXA = CC.ID)
        inner join TB_FIN_PARCELA_RECEBER PPR on (PR.ID_FIN_PARCELA_RECEBER = PPR.ID)
	inner join TB_FIN_LANCAMENTO_RECEBER LR on (PPR.ID_FIN_LANCAMENTO_RECEBER = LR.ID)
	inner join TB_CLIENTE C on (LR.ID_CLIENTE = C.ID) 
	inner join TB_PESSOA P on (C.ID_PESSOA = P.ID)
	inner join TB_FIN_DOCUMENTO_ORIGEM DOC on (LR.ID_FIN_DOCUMENTO_ORIGEM = DOC.ID)
 
ORDER BY 2, 5
;


CREATE VIEW VIEW_FIN_LANCAMENTO_RECEBIDO(
    ID,
    ID_LANCAMENTO_RECEBER,
    QUANTIDADE_PARCELA,
    VALOR_LANCAMENTO,
    DATA_LANCAMENTO,
    NUMERO_DOCUMENTO,
    ID_PARCELA_RECEBER,
    NUMERO_PARCELA,
    DATA_VENCIMENTO,
    VALOR_PARCELA,
    TAXA_JURO,
    VALOR_JURO,
    TAXA_MULTA,
    VALOR_MULTA,
    TAXA_DESCONTO,
    VALOR_DESCONTO,
    SIGLA_DOCUMENTO,
    ID_CLIENTE,
    NOME_CLIENTE,
    SITUACAO_PARCELA,
    DESCRICAO_SITUACAO_PARCELA,
    ID_CONTA_CAIXA,
    NOME_CONTA_CAIXA,
    BOLETO_NOSSO_NUMERO,
    DATA_RECEBIMENTO, 
    VALOR_RECEBIDO,
    PARCELA_RECEBER
)
AS
select
  CAST( CONCAT(LR.ID,PR.ID) as Integer) as ID, LR.ID as ID_LANCAMENTO_RECEBER, LR.QUANTIDADE_PARCELA, LR.VALOR_A_RECEBER AS VALOR_LANCAMENTO, LR.DATA_LANCAMENTO, LR.NUMERO_DOCUMENTO,
  PR.ID as ID_PARCELA_RECEBER, PR.NUMERO_PARCELA, PR.DATA_VENCIMENTO, PR.VALOR AS VALOR_PARCELA, PR.TAXA_JURO, PR.VALOR_JURO, PR.TAXA_MULTA, PR.VALOR_MULTA, PR.TAXA_DESCONTO, PR.VALOR_DESCONTO,
  DOC.SIGLA_DOCUMENTO,
  C.ID as ID_CLIENTE, P.NOME as NOME_CLIENTE,
  S.SITUACAO as SITUACAO_PARCELA, S.DESCRICAO as DESCRICAO_SITUACAO_PARCELA,
  CC.ID AS ID_CONTA_CAIXA, CC.NOME AS NOME_CONTA_CAIXA, PR.BOLETO_NOSSO_NUMERO,
  PB.DATA_RECEBIMENTO, PB.VALOR_RECEBIDO
, 
CASE
WHEN PB.VALOR_RECEBIDO > 0 THEN
(
SELECT SUM(COALESCE(PCR.VALOR_RECEBIDO,0))
FROM tb_fin_parcela_recebimento PCR
WHERE PCR.ID_FIN_PARCELA_RECEBER = PR.ID AND PCR.DATA_RECEBIMENTO <= DATA_RECEBIMENTO
) 
ELSE
  PR.VALOR
END AS VALOR_LIQUIDO
from
  TB_FIN_LANCAMENTO_RECEBER LR, TB_FIN_DOCUMENTO_ORIGEM DOC,
  TB_PESSOA P, TB_CLIENTE C, TB_FIN_STATUS_PARCELA S, TB_CONTA_CAIXA CC,
  TB_FIN_PARCELA_RECEBER PR 
  LEFT OUTER JOIN TB_FIN_PARCELA_RECEBIMENTO PB ON PR.ID = PB.ID_FIN_PARCELA_RECEBER
where 
  PR.ID_FIN_LANCAMENTO_RECEBER = LR.ID
and
  PR.ID_FIN_STATUS_PARCELA = S.ID
and
  LR.ID_FIN_DOCUMENTO_ORIGEM = DOC.ID
and
  LR.ID_CLIENTE = C.ID
and
  C.ID_PESSOA = P.ID
and
CASE
WHEN PB.VALOR_RECEBIDO > 0 THEN
  PB.ID_CONTA_CAIXA = CC.ID
ELSE
  PR.ID_CONTA_CAIXA = CC.ID
end
;

CREATE VIEW VIEW_FIN_LANCAMENTO_RECEBER(
	ID,
    ID_LANCAMENTO_RECEBER,
    QUANTIDADE_PARCELA,
    VALOR_LANCAMENTO,
    DATA_LANCAMENTO,
	NUMERO_DOCUMENTO,
    ID_PARCELA_RECEBER,
    NUMERO_PARCELA,
    DATA_VENCIMENTO,
    VALOR_PARCELA,
	TAXA_JURO,
	VALOR_JURO,
	TAXA_MULTA,
	VALOR_MULTA,
	TAXA_DESCONTO,
	VALOR_DESCONTO,
    SIGLA_DOCUMENTO,
    NOME_CLIENTE,
	ID_STATUS_PARCELA,
    SITUACAO_PARCELA,
	DESCRICAO_SITUACAO_PARCELA,
	ID_CONTA_CAIXA,
	NOME_CONTA_CAIXA)
AS
select
  CAST( CONCAT(LR.ID,PR.ID) as Integer) as ID, LR.ID as ID_LANCAMENTO_RECEBER, LR.QUANTIDADE_PARCELA, LR.VALOR_A_RECEBER AS VALOR_LANCAMENTO, LR.DATA_LANCAMENTO, LR.NUMERO_DOCUMENTO,
  PR.ID as ID_PARCELA_RECEBER, PR.NUMERO_PARCELA, PR.DATA_VENCIMENTO, PR.VALOR AS VALOR_PARCELA, PR.TAXA_JURO, PR.VALOR_JURO, PR.TAXA_MULTA, PR.VALOR_MULTA, PR.TAXA_DESCONTO, PR.VALOR_DESCONTO,
  DOC.SIGLA_DOCUMENTO,
  P.NOME as NOME_CLIENTE,
  S.ID, S.SITUACAO as SITUACAO_PARCELA, S.DESCRICAO as DESCRICAO_SITUACAO_PARCELA,
  CC.ID AS ID_CONTA_CAIXA, CC.NOME AS NOME_CONTA_CAIXA
from
  TB_FIN_LANCAMENTO_RECEBER LR, TB_FIN_PARCELA_RECEBER PR, TB_FIN_DOCUMENTO_ORIGEM DOC,
  TB_PESSOA P, TB_CLIENTE C, TB_FIN_STATUS_PARCELA S, TB_CONTA_CAIXA CC
where
  PR.ID_FIN_LANCAMENTO_RECEBER = LR.ID
and
  PR.ID_FIN_STATUS_PARCELA = S.ID
and
  LR.ID_FIN_DOCUMENTO_ORIGEM = DOC.ID
and
  LR.ID_CLIENTE = C.ID
and
  C.ID_PESSOA = P.ID
and
  PR.ID_CONTA_CAIXA = CC.ID
;



CREATE VIEW VIEW_FIN_LANCAMENTO_PAGAR(
	ID,
    ID_LANCAMENTO_PAGAR,
    QUANTIDADE_PARCELA,
    VALOR_LANCAMENTO,
    DATA_LANCAMENTO,
	NUMERO_DOCUMENTO,
    ID_PARCELA_PAGAR,
    NUMERO_PARCELA,
    DATA_VENCIMENTO,
    VALOR_PARCELA,
	TAXA_JURO,
	VALOR_JURO,
	TAXA_MULTA,
	VALOR_MULTA,
	TAXA_DESCONTO,
	VALOR_DESCONTO,
    SIGLA_DOCUMENTO,
    NOME_FORNECEDOR,
	ID_STATUS_PARCELA,
    SITUACAO_PARCELA,
	DESCRICAO_SITUACAO_PARCELA,
	ID_CONTA_CAIXA,
	NOME_CONTA_CAIXA,
	FORNECEDOR_SOFRE_RETENCAO)
AS
select
  CAST( CONCAT(LP.ID,PP.ID) as Integer) as ID, LP.ID as ID_LANCAMENTO_PAGAR, LP.QUANTIDADE_PARCELA, LP.VALOR_A_PAGAR AS VALOR_LANCAMENTO, LP.DATA_LANCAMENTO, LP.NUMERO_DOCUMENTO,
  PP.ID as ID_PARCELA_PAGAR, PP.NUMERO_PARCELA, PP.DATA_VENCIMENTO, PP.VALOR AS VALOR_PARCELA, PP.TAXA_JURO, PP.VALOR_JURO, PP.TAXA_MULTA, PP.VALOR_MULTA, PP.TAXA_DESCONTO, PP.VALOR_DESCONTO,
  DOC.SIGLA_DOCUMENTO,
  P.NOME as NOME_FORNECEDOR,
  S.ID as ID_STATUS_PARCELA, S.SITUACAO as SITUACAO_PARCELA, S.DESCRICAO as DESCRICAO_SITUACAO_PARCELA,
  CC.ID AS ID_CONTA_CAIXA, CC.NOME AS NOME_CONTA_CAIXA, F.SOFRE_RETENCAO as FORNECEDOR_SOFRE_RETENCAO
from
  TB_FIN_LANCAMENTO_PAGAR LP, TB_FIN_PARCELA_PAGAR PP, TB_FIN_DOCUMENTO_ORIGEM DOC,
  TB_PESSOA P, TB_FORNECEDOR F, TB_FIN_STATUS_PARCELA S, TB_CONTA_CAIXA CC
where
  PP.ID_FIN_LANCAMENTO_PAGAR = LP.ID
and
  PP.ID_FIN_STATUS_PARCELA = S.ID
and
  LP.ID_FIN_DOCUMENTO_ORIGEM = DOC.ID
and
  LP.ID_FORNECEDOR = F.ID
and
  F.ID_PESSOA = P.ID
and
  PP.ID_CONTA_CAIXA = CC.ID
;

CREATE VIEW VIEW_FIN_FLUXO_CAIXA(
    ID_CONTA_CAIXA,
    NOME_CONTA_CAIXA,
    NOME_PESSOA,
	DATA_LANCAMENTO,
    DATA_VENCIMENTO,
    VALOR,
    CODIGO_SITUACAO,
	DESCRICAO_SITUACAO,
    OPERACAO)
AS
select
  CC.ID AS ID_CONTA_CAIXA, CC.NOME AS NOME_CONTA_CAIXA, P.NOME,
  LP.DATA_LANCAMENTO, PP.DATA_VENCIMENTO, 
  PP.VALOR, SP.SITUACAO, SP.DESCRICAO, 'S' AS OPERACAO
 
from 
  TB_FIN_PARCELA_PAGAR PP 
	inner join TB_CONTA_CAIXA CC on (PP.ID_CONTA_CAIXA = CC.ID)
	inner join TB_FIN_LANCAMENTO_PAGAR LP on (PP.ID_FIN_LANCAMENTO_PAGAR = LP.ID)
	inner join TB_FORNECEDOR F on (LP.ID_FORNECEDOR = F.ID) 
	inner join TB_PESSOA P on (F.ID_PESSOA = P.ID)
	inner join TB_FIN_STATUS_PARCELA SP on (PP.ID_FIN_STATUS_PARCELA = SP.ID)

where
  SP.SITUACAO <> '02'
 
union
 
select
  CC.ID AS ID_CONTA_CAIXA, CC.NOME AS NOME_CONTA_CAIXA, P.NOME,
  LR.DATA_LANCAMENTO, PR.DATA_VENCIMENTO, 
  PR.VALOR, SP.SITUACAO, SP.DESCRICAO, 'E' AS OPERACAO
 
from 
  TB_FIN_PARCELA_RECEBER PR 
	inner join TB_CONTA_CAIXA CC on (PR.ID_CONTA_CAIXA = CC.ID)
	inner join TB_FIN_LANCAMENTO_RECEBER LR on (PR.ID_FIN_LANCAMENTO_RECEBER = LR.ID)
	inner join TB_CLIENTE C on (LR.ID_CLIENTE = C.ID) 
	inner join TB_PESSOA P on (C.ID_PESSOA = P.ID)
	inner join TB_FIN_STATUS_PARCELA SP on (PR.ID_FIN_STATUS_PARCELA = SP.ID)

where
  SP.SITUACAO <> '02'
 
ORDER BY 9
;


CREATE
	VIEW public.VIEW_COMPRA_REQ_ITEM_COTADO
	AS
	(
	select
		CRD.ID,
		CRD.ID_COMPRA_REQUISICAO,
		CRD.ID_PRODUTO,
		P.DESCRICAO AS "PRODUTO_NOME",
		CRD.QUANTIDADE,
		CRD.QUANTIDADE_COTADA,
		CRD.ITEM_COTADO,
		COT.ID AS "ID_COTACAO"
	from
		TB_COMPRA_REQUISICAO_DETALHE CRD, TB_COMPRA_REQ_COTACAO_DETALHE CRCD, TB_PRODUTO P, TB_COMPRA_COTACAO COT
	where
		CRD.ID = CRCD.ID_COMPRA_REQUISICAO_DETALHE and
		CRD.ID_PRODUTO = P.ID and
		COT.ID = CRCD.ID_COMPRA_COTACAO
	);
	
	
	
	CREATE
	VIEW public.VIEW_COMPRA_MAPA_COMPARATIVO
	AS
	(
	select 
	  CONCAT(COTA.ID, CFC.ID, CCD.ID, CCD.ID_PRODUTO, FORN.ID) as ID,
	  COTA.ID AS ID_COMPRA_COTACAO, CFC.ID AS ID_COMPRA_FORNECEDOR_COTACAO, CCD.ID AS ID_COMPRA_COTACAO_DETALHE, CCD.ID_PRODUTO, FORN.ID AS ID_FORNECEDOR,
	  PRO.DESCRICAO AS PRODUTO_NOME, PES.NOME AS FORNECEDOR_NOME, CCD.QUANTIDADE, CCD.QUANTIDADE_PEDIDA, 
	  CCD.VALOR_UNITARIO, CCD.VALOR_SUBTOTAL, CCD.TAXA_DESCONTO, CCD.VALOR_DESCONTO, CCD.VALOR_TOTAL
	from
	  TB_COMPRA_COTACAO COTA 
	  INNER JOIN TB_COMPRA_FORNECEDOR_COTACAO CFC ON (COTA.ID = CFC.ID_COMPRA_COTACAO)
	  INNER JOIN TB_COMPRA_COTACAO_DETALHE CCD ON (CFC.ID = CCD.ID_COMPRA_FORNECEDOR_COTACAO)
	  INNER JOIN TB_PRODUTO PRO ON (PRO.ID = CCD.ID_PRODUTO)
	  INNER JOIN TB_FORNECEDOR FORN ON (FORN.ID = CFC.ID_FORNECEDOR)
	  INNER JOIN TB_PESSOA PES ON (PES.ID = FORN.ID_PESSOA)
	order by PRO.DESCRICAO, PES.NOME
	);
	
	
	
	
	
	
	CREATE VIEW VIEW_FIN_CHEQUE_NAO_COMPENSADO(
	ID,
    ID_CONTA_CAIXA,
    NOME_CONTA_CAIXA,
    TALAO,
	NUMERO_TALAO,
    NUMERO_CHEQUE,
    STATUS_CHEQUE,
    DATA_STATUS,
	VALOR)
AS
select
  0 as ID,
  CC.ID AS ID_CONTA_CAIXA, CC.NOME AS NOME_CONTA_CAIXA, 
  T.TALAO, T.NUMERO AS NUMERO_TALAO, 
  C.NUMERO AS NUMERO_CHEQUE, C.STATUS_CHEQUE, C.DATA_STATUS, VALOR
 
from 
  TB_CHEQUE C 
	inner join TB_TALONARIO_CHEQUE T on (C.ID_TALONARIO_CHEQUE = T.ID)
	inner join TB_CONTA_CAIXA CC on (T.ID_CONTA_CAIXA = CC.ID)
	inner join TB_FIN_CHEQUE_EMITIDO CE on (CE.ID_CHEQUE = C.ID)

where
  C.STATUS_CHEQUE <> 'C';
  
  
  
  CREATE
VIEW public.VIEW_FIN_CHEQUES_EM_SER
AS
select 
  CC.ID as ID_CONTA_CAIXA, CC.NOME as NOME_CONTA_CAIXA,
  T.ID as ID_TALAO, T.TALAO, T.NUMERO as NUMERO_TALAO, T.STATUS_TALAO,
  C.ID as ID_CHEQUE, C.NUMERO as NUMERO_CHEQUE, C.STATUS_CHEQUE
from
  TB_CONTA_CAIXA CC, TB_TALONARIO_CHEQUE T, TB_CHEQUE C
where
  C.ID_TALONARIO_CHEQUE = T.ID
and
  T.ID_CONTA_CAIXA = CC.ID
and 
  C.STATUS_CHEQUE = 'E';


		CREATE
	VIEW public.VIEW_COMPRA_ITEM_COTACAO
	AS
	(
	  select 
	   C.ID as ID_COTACAO, D.*, P.DESCRICAO AS "PRODUTO.NOME" 
	  from 
	   TB_COMPRA_COTACAO C 
	   INNER JOIN TB_COMPRA_FORNECEDOR_COTACAO CF  ON (CF.ID_COMPRA_COTACAO = C.ID) 
	   INNER JOIN TB_COMPRA_COTACAO_DETALHE D ON (D.ID_COMPRA_FORNECEDOR_COTACAO = CF.ID) 
	   INNER JOIN TB_PRODUTO P ON (D.ID_PRODUTO = P.ID)
	);
	
	

	
	

	