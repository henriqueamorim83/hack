#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%d{HH:mm:ss} %5p [%-20c{1}] %m%n
#
#log4j.rootLogger=warn, stdout
#
#log4j.logger.org.hibernate=info
#log4j.logger.org.hibernate.tool.hbm2ddl=info
#log4j.logger.org.springframework=info

#### Usando 2 appenders, 1 para logar no console, outro para um arquivo
log4j.rootCategory=INFO,stdout,fileOut

# Imprime somente mensagens com 'priority' WARN ou mais alto para o logger
#lembrando a ordem: DEBUG - INFO - WARN - ERROR - FATAL
#log4j.category.customLog=INFO

#### O primeiro appender escreve no console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%5p - %m%n

#### O segundo appender escreve em um arquivo
log4j.appender.fileOut =org.apache.log4j.RollingFileAppender
log4j.appender.fileOut.File=log/LogFile.log
# Controla o tamanho maximo do arquivo
log4j.appender.fileOut.MaxFileSize=1000KB
# Faz backup dos arquivos de log

log4j.appender.fileOut.MaxBackupIndex=1
log4j.appender.fileOut.layout=org.apache.log4j.PatternLayout
log4j.appender.fileOut.layout.ConversionPattern= %-2d{dd/MM/yy HH:mm} [%p] [%t] (%c{1}) - %m%n

#### Registro de log di\ufffdrio
#log4j.appender.htOut =org.apache.log4j.DailyRollingFileAppender
#log4j.appender.htOut.Threshold=INFO
#log4j.appender.htOut.File=log/backup/logWeeklyFile.log
#log4j.appender.htOut.DatePattern='.'yyyy-MM-dd
#log4j.appender.htOut.DatePattern='.'yyyy-MMM-WW
#log4j.appender.htOut.layout=org.apache.log4j.PatternLayout
#log4j.appender.htOut.layout.ConversionPattern= %-2d{dd/MM/yy HH:mm} [%p] (%c{1}) - %m%n

############################################
